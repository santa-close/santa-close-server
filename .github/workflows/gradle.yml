name: Run Gradle on PRs

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  gradle:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Start containers
        run: docker-compose -f "docker-compose.yml" up -d --build

      - uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: temurin

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Run lint check
        uses: gradle/gradle-build-action@v2
        with:
          arguments: lintKotlin

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonarqube --info

      - name: Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: test-results
          path: '**/build/test-results/test/TEST-*.xml'
          reporter: java-junit

      - name: Check files are changed
        run: git diff --exit-code

      - name: Trigger dispatch to generate graphql schema
        run: gh api /repos/santa-close/santa-close.github.io/dispatches -f event_type='schema'
        env:
          GITHUB_TOKEN: ${{ secrets.SCHEMA_PAGE_TOKEN }}
