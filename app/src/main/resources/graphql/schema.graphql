schema {
  query: Query
  mutation: Mutation
}

"Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"authorization"
directive @auth(role: AppUserRole!) on FIELD_DEFINITION

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type AppAuthInfo {
  accessToken: String!
  expiredAt: DateTime!
}

type Mutation {
  createMountainReview(input: CreateMountainReviewAppInput!): Boolean!
  "샘플 데이터"
  createSample(input: CreateSampleAppInput!): Boolean! @auth(role : USER)
  "로그인 및 회원가입"
  signIn(input: SignInAppInput!): AppAuthInfo!
}

type Query {
  "샘플 데이터"
  sample(input: SampleAppItemInput!): SampleAppDetail! @auth(role : USER)
}

type SampleAppDetail {
  name: String!
  price: Int!
  status: SampleStatus!
}

enum AppUserRole {
  USER
  VIEWER
}

enum MountainDifficulty {
  EASY
  HARD
  NORMAL
}

enum SampleStatus {
  CLOSE
  OPEN
}

enum SignInType {
  APPLE
  KAKAO
}

"A type representing a formatted java.time.LocalDateTime"
scalar DateTime

input CreateMountainReviewAppInput {
  content: String!
  difficulty: MountainDifficulty!
  images: [String!]!
  mountainId: String!
  parking: Int!
  scenery: Int!
  title: String!
  toilet: Int!
  traffic: Int!
  trail: Int!
  tree: Int!
}

input CreateSampleAppInput {
  name: String!
  price: Int!
  status: SampleStatus!
}

input SampleAppItemInput {
  name: String
  price: Int!
}

input SignInAppInput {
  code: String!
  type: SignInType!
}